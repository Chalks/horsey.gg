import{a as T,b as o,G as q,S as J,D as L,e as F,H as N,F as H,o as v,f as m,h,t as k,u as l,r as X,i as Q,j as D,P as V,k as E,l as le,C as ne,M as re,m as U,p as j,q as z,s as A,v as p,w as $,x as B,y as Z,z as ce,B as ie,A as ue,E as de,I as fe,J as ve}from"./entry.d2493b6f.js";import{c as O}from"./client-only.ad201a0b.js";import{s as me}from"./seo.7cc086e9.js";const he={class:"flex items-center justify-between not-prose gap-4"},_e={class:"font-bold uppercase text-lg"},ge={class:"tracking-widest text-lg font-thin"},pe={__name:"TitleBlock",props:{title:{type:String,required:!0}},setup(f){const s=T(),t=o(()=>{switch(s.selectedDifficulty){case H:return"FRICK";case N:return"HECK";case F:return"DARN";case L:return"DANG";case J:return"SHUCKS";case q:default:return"GOSH"}});return(a,e)=>(v(),m("div",he,[h("h1",_e,k(f.title),1),h("div",ge,k(l(t))+" EDITION ",1)]))}},ye={__name:"DifficultyDescription.client",props:{gosh:{type:Boolean,default:!1},shucks:{type:Boolean,default:!1},dang:{type:Boolean,default:!1},darn:{type:Boolean,default:!1},heck:{type:Boolean,default:!1},frick:{type:Boolean,default:!1}},setup(f){const s=f,t=T(),a=o(()=>s.gosh&&t.selectedDifficulty===q),e=o(()=>s.shucks&&t.selectedDifficulty===J),n=o(()=>s.dang&&t.selectedDifficulty===L),u=o(()=>s.darn&&t.selectedDifficulty===F),i=o(()=>s.heck&&t.selectedDifficulty===N),_=o(()=>s.frick&&t.selectedDifficulty===H),S=o(()=>a.value||e.value||n.value||u.value||i.value||_.value);return(c,r)=>l(S)?(v(),m("div",{key:0,class:Q(["text-xs font-bold text-gray-700 p-1 mb-1 last:mb-0",{"bg-gosh":l(a),"bg-shucks":l(e),"bg-dang":l(n),"bg-darn":l(u),"bg-heck":l(i),"bg-frick":l(_)}])},[X(c.$slots,"default")],2)):D("",!0)}},be=["a","b","c","d","e","f","g","h"],Me=["1","2","3","4","5","6","7","8"],I=()=>`${be[Math.floor(Math.random()*8)]}${Me[Math.floor(Math.random()*8)]}`,W=["a","b","c","d","e","f","g","h"],Y=["1","2","3","4","5","6","7","8"],ke=(f,s)=>{if(!f)return[];if(!s)return[];if(f!==V.bn&&f!==V.wn)return[];const t=W.indexOf(s[0]),a=Y.indexOf(s[1]);return[[t-2,a-1],[t-2,a+1],[t-1,a-2],[t-1,a+2],[t+1,a-2],[t+1,a+2],[t+2,a-1],[t+2,a+1]].filter(([e,n])=>{const u=e>=0&&e<=7,i=n>=0&&n<=7;return u&&i}).map(([e,n])=>`${W[e]}${Y[n]}`)};const Se={class:"relative"},we=h("span",null,"Click to play",-1),xe={__name:"ChessBoard",props:{start:{type:String,default:null},goalSquares:{type:Array,default:()=>[]},disableLegalMoves:{type:Number,default:0},showLegalMoves:{type:Boolean,default:!1}},emits:["start","move","invalidMove"],setup(f,{expose:s,emit:t}){const a=f;let e=null;const n=E(null),u=E(null),i=E(null),_=o(()=>ke(u.value,i.value)),S=o(()=>{const d=_.value.filter(oe=>!a.goalSquares.includes(oe)),b=Math.min(_.value.length-1,d.length),x=d.sort(()=>.5-Math.random()),ae=Math.min(a.disableLegalMoves,b);return x.slice(0,ae)}),c=o(()=>_.value.filter(d=>!S.value.includes(d))),r=E(!1),M=()=>{if(!e)return;u.value=["bn","wn"][Math.floor(Math.random()*2)];let d=a.start||I();for(;a.goalSquares.includes(d);)d=I();i.value=d,e.setPiece(i.value,u.value,!0)},y=()=>{e&&(e.removeMarkers(U),a.goalSquares.forEach(d=>{e.addMarker(U,d)}))},w=()=>{e&&(e.removeMarkers(j),a.showLegalMoves&&c.value.forEach(d=>{e.addMarker(j,d)}))},g=()=>{e&&(e.removeMarkers(z),S.value.forEach(d=>{e.addMarker(z,d)}))},P=d=>{if(!e)return;const b=d.target.getAttribute("data-square");if(!b)return;const x=e.getMarkers(A,b);(x==null?void 0:x.length)===0&&(e.removeMarkers(A),e.addMarker(A,b))},ee=()=>{e&&e.removeMarkers(A)},te=d=>{if(!e)return;const b=d.target.getAttribute("data-square");if(c.value.includes(b)){const x=i.value;e.movePiece(x,b),i.value=b,w(),g(),t("move",{from:x,to:b})}else t("invalidMove",{from:i.value,to:b})},K=()=>{e&&(i.value=null,e.removeMarkers(),e.destroy(),n.value.replaceChildren())},C=()=>{e=new ne(n.value,{assetsUrl:"/chess/",extensions:[{class:re}]}),e.context.addEventListener("mousedown",te),e.context.addEventListener("mouseover",P),e.context.addEventListener("mouseleave",ee)};le(()=>{C()});const se=()=>{r.value=!0,t("start")};return s({ready:()=>{K(),C(),M(),y(),w(),g()},stop:()=>{r.value=!1,i.value=null,K(),C()}}),(d,b)=>(v(),m("div",Se,[h("div",{ref_key:"boardEl",ref:n},null,512),l(r)?D("",!0):(v(),m("div",{key:0,class:"cursor-pointer bg-gray-300/80 absolute inset-0 flex flex-col items-center justify-center select-none gap-2",onClick:se},[we,X(d.$slots,"default")]))]))}},De=O(ye),Be={__name:"BaseHorsey",setup(f){const s=E(null),t=E([]),a=T();let e;const n=o(()=>a.selectedDifficulty===q),u=o(()=>a.selectedDifficulty===L?1:a.selectedDifficulty===F?2:a.selectedDifficulty===N?3:a.selectedDifficulty===H?4:0),i=()=>{e={start:null,end:null,moves:0,invalidMoves:0,startPerformance:0,endPerformance:0,ms:0}},_=()=>{a.saveFile.addBaseStat(new ie({...e,difficulty:a.selectedDifficulty,date:Date.now()})),i(),s.value.stop()},S=async()=>{i(),t.value=[I()],e.end=t.value[0],e.startPerformance=performance.now(),await ce(),s.value.ready()},c=({from:M,to:y})=>{e.moves===0&&(e.start=M),e.moves+=1,t.value[0]===y&&(e.endPerformance=performance.now(),e.ms=e.endPerformance-e.startPerformance,_())},r=()=>{e.invalidMoves+=1};return(M,y)=>{const w=pe,g=De,P=xe;return v(),m(Z,null,[p(w,{title:"Move Machine",class:"mb-1"}),h("div",null,[p(g,{gosh:""},{default:$(()=>[B(" Show legal moves ")]),_:1}),p(g,{shucks:"",dang:"",darn:"",heck:"",frick:""},{default:$(()=>[B(" Hide legal moves ")]),_:1}),p(g,{dang:"",darn:"",heck:"",frick:""},{default:$(()=>[B(" Disable one legal move ")]),_:1}),p(g,{darn:"",heck:"",frick:""},{default:$(()=>[B(" Disable one more legal move ")]),_:1}),p(g,{heck:"",frick:""},{default:$(()=>[B(" Disable one more legal move ")]),_:1}),p(g,{frick:""},{default:$(()=>[B(" Disable one more legal move ")]),_:1})]),p(P,{ref_key:"board",ref:s,"show-legal-moves":l(n),"disable-legal-moves":l(u),"goal-squares":l(t),class:"mt-1",onStart:S,onMove:c,onInvalidMove:r},null,8,["show-legal-moves","disable-legal-moves","goal-squares"])],64)}}},$e={class:"rounded-b-lg overflow-hidden w-full origin-bottom-left not-prose"},Ge={class:"relative px-4 bg-white"},Ee=h("div",{class:"absolute top-1/2 left-0 right-0 bottom-0 bg-black"},null,-1),Re={class:"stat text-3xl text-white mix-blend-difference translate-y-[10%] z-10"},Te={class:"bg-green-900 h-4 w-full relative"},Ae={class:"text-white font-bold text-xs whitespace-nowrap"},qe={__name:"StatItem.client",props:{label:{type:String,required:!0},value:{type:Array,required:!0},ratio:{type:Boolean,default:!1},speed:{type:Boolean,default:!1},count:{type:Boolean,default:!1},higherIsBetter:{type:Boolean,default:!1},lowerIsBetter:{type:Boolean,default:!1}},setup(f){const s=f,t=o(()=>{if(s.ratio)return(1-s.value)*100;if(s.speed){const[e,n,u]=s.value;return(n-e)/(u-e)*100}return s.count?0:50}),a=o(()=>{if(s.ratio)return`${(100*s.value[0]).toPrecision(4)}% optimal moves`;if(s.speed){const[e,n,u]=s.value;return`${n.toFixed(2)} ms / game (${u.toFixed(2)} avg slowest, ${e.toFixed(2)} avg fastest)`}return s.count?s.value.join(" "):s.value});return(e,n)=>(v(),m("div",$e,[h("div",Ge,[Ee,h("div",Re,k(f.label),1)]),h("div",Te,[h("div",{class:Q(["absolute top-0 bottom-0 left-0 bg-green-700 flex items-center px-4 transition-all",{"rounded-r-full":l(t)>0}]),style:ue({right:`${l(t)}%`})},[h("p",Ae,k(l(a)),1)],6)])]))}},Pe=de("baseStatsStore",()=>{const f=T(),s=o(()=>{var c;return((c=f.saveFile)==null?void 0:c.selectedDifficulty)??q}),t=o(()=>{var r;return Object.values(((r=f.saveFile)==null?void 0:r.baseStats)??{}).filter(({difficulty:M})=>M===s.value)}),a=o(()=>t.value.length),e=o(()=>t.value.sort(({ms:c},{ms:r})=>c-r)),n=o(()=>t.value.reduce((c,{moves:r})=>c+r,0)),u=o(()=>t.value.reduce((c,{invalidMoves:r})=>c+r,0)),i=o(()=>t.value.reduce((c,{optimalMoves:r})=>c+r,0)),_=o(()=>t.value.reduce((c,{ms:r})=>c+r,0));return{baseStats:o(()=>{const c=Math.floor(e.value.length*.1),r=e.value.slice(-1*c).reduce((y,{ms:w,moves:g})=>(y.time+=w,y.moves+=g,y),{time:0,moves:0}),M=e.value.slice(0,c).reduce((y,{ms:w,moves:g})=>(y.time+=w,y.moves+=g,y),{time:0,moves:0});return{allGames:a.value,allMoves:n.value,allInvalidMoves:u.value,allOptimalMoves:i.value,allTime:_.value,allBestMoveRatio:i.value/n.value,allAverageTimePerMove:_.value/n.value,allAverageSlowestTimePerMove:r.time/r.moves,allAverageFastestTimePerMove:M.time/M.moves}}),difficulty:s}}),Ce=O(qe),Ie={class:"not-prose"},Le={key:0,class:"mb-2"},Fe={key:1,class:"mb-4"},Ne={key:2},He={key:3,class:"mb-2"},Oe={key:4},Ke={key:5,class:"flex flex-col gap-4"},R=10,G=100,Ve={__name:"StatsDisplay.client",setup(f){const s=Pe(),{baseStats:t}=fe(s),a=o(()=>t.value.allGames>=R+10),e=o(()=>t.value.allGames>=R+10&&t.value.allGames<G),n=o(()=>t.value.allGames>=G),u=o(()=>t.value.allGames>=0),i=o(()=>t.value.allGames>=0&&t.value.allGames<R),_=o(()=>t.value.allGames>=R);return(S,c)=>{const r=Ce;return v(),m("div",Ie,[l(a)?(v(),m("h3",Le,"Rolling "+k(G)+" Statistics")):D("",!0),l(e)?(v(),m("div",Fe," Play at least "+k(G-l(t).allGames)+" more games to see your rolling "+k(G)+" statistics! These statistics are based on your "+k(G)+" most recent games only. ",1)):D("",!0),l(n)?(v(),m("div",Ne," rolling stats coming soon ")):D("",!0),l(u)?(v(),m("h3",He,"Lifetime Statistics")):D("",!0),l(i)?(v(),m("div",Oe," Play at least "+k(R-l(t).allGames)+" more games to see statistics! ",1)):D("",!0),l(_)?(v(),m("div",Ke,[p(r,{label:"GAMES",value:["You have played",l(t).allGames,"games. Wow."],count:"","lower-is-better":""},null,8,["value"]),p(r,{label:"SPEED",value:[l(t).allAverageFastestTimePerMove,l(t).allAverageTimePerMove,l(t).allAverageSlowestTimePerMove],speed:"","lower-is-better":""},null,8,["value"]),p(r,{label:"ACCURACY",value:[l(t).allBestMoveRatio],ratio:"","higher-is-better":""},null,8,["value"])])):D("",!0)])}}},Ue=O(Ve),je={class:"mt-4"},ze=ve("<p>The Base Knight game trains you on the basic knight moves.</p><h3>fork knight</h3><p>coming soon - find the square that forks two pieces</p><h3>defense knight</h3><p>coming soon - find a square that defends a piece</p><h3>defended knight</h3><p>coming soon - find a square that defends the knight</p><h3>dodge knight</h3><p>coming soon - get to a square while dodging all no-no squares</p><h3>predict knight</h3><p>coming soon - find a square X moves away from the knight</p>",11),Ze={__name:"index",setup(f){me({pageTitle:"horsey.gg"});const s=T(),t=()=>{s.saveFile.resetBaseStats()};return(a,e)=>{const n=Be,u=Ue;return v(),m(Z,null,[p(n),h("div",je,[p(u)]),h("p",null,[B(" Reset stats, test mode only: "),h("button",{type:"button",onClick:t},"Reset stats")]),ze],64)}}};export{Ze as default};
