import{c as N}from"./client-only.c2da8f03.js";import{a as q,o as v,b as m,e as g,f as S,u as a,E as P,h,D as V,i as R,F as I,j as F,k as n,r as X,P as U,l as E,w as oe,m as le,C as ne,M as re,H as L,G as z,p as j,q as Y,s as M,t as T,v as $,x as Q,y as ie,B as ce,z as D,A as ue,I as de,J as fe,K as ve}from"./entry.d66386d0.js";import{s as me}from"./seo.5d0a27dd.js";const ge=g("label",{class:"text-xs uppercase tracking-widest"},"Difficulty",-1),pe={class:"flex"},he={__name:"DifficultyToggle.client",props:{easy:{type:Boolean,default:!1},dang:{type:Boolean,default:!1},damn:{type:Boolean,default:!1},fuck:{type:Boolean,default:!1},evil:{type:Boolean,default:!1}},setup(c){const s=q(),t=()=>{s.setDifficulty(P)},o=()=>{s.setDifficulty(V)},e=()=>{s.setDifficulty(R)},l=()=>{s.setDifficulty(I)},u=()=>{s.setDifficulty(F)};return(d,p)=>(v(),m("div",null,[ge,g("div",pe,[c.easy?(v(),m("div",{key:0,class:S(["cursor-pointer text-sm font-bold p-1 grow text-center select-none",{"bg-easy":a(s).selectedDifficulty===a(P)}]),onClick:t}," EASY ",2)):h("",!0),c.dang?(v(),m("div",{key:1,class:S(["cursor-pointer text-sm font-bold p-1 grow text-center select-none",{"bg-dang":a(s).selectedDifficulty===a(V)}]),onClick:o}," DANG ",2)):h("",!0),c.damn?(v(),m("div",{key:2,class:S(["cursor-pointer text-sm font-bold p-1 grow text-center select-none",{"bg-damn":a(s).selectedDifficulty===a(R)}]),onClick:e}," DAMN ",2)):h("",!0),c.fuck?(v(),m("div",{key:3,class:S(["cursor-pointer text-sm font-bold p-1 grow text-center select-none",{"bg-fuck":a(s).selectedDifficulty===a(I)}]),onClick:l}," FUCK ",2)):h("",!0),c.evil?(v(),m("div",{key:4,class:S(["cursor-pointer text-sm font-bold p-1 grow text-center select-none",{"bg-evil":a(s).selectedDifficulty===a(F)}]),onClick:u}," EVIL ",2)):h("",!0)])]))}},_e={__name:"DifficultyDescription.client",props:{easy:{type:Boolean,default:!1},dang:{type:Boolean,default:!1},damn:{type:Boolean,default:!1},fuck:{type:Boolean,default:!1},evil:{type:Boolean,default:!1}},setup(c){const s=c,t=q(),o=n(()=>s.easy&&t.selectedDifficulty===P),e=n(()=>s.dang&&t.selectedDifficulty===V),l=n(()=>s.damn&&t.selectedDifficulty===R),u=n(()=>s.fuck&&t.selectedDifficulty===I),d=n(()=>s.evil&&t.selectedDifficulty===F),p=n(()=>o.value||e.value||l.value||u.value||d.value);return(k,i)=>a(p)?(v(),m("div",{key:0,class:S(["text-xs font-bold text-gray-700 px-1 pt-1 last:pb-1",{"bg-easy":a(o),"bg-dang":a(e),"bg-damn":a(l),"bg-fuck":a(u),"bg-evil":a(d)}])},[X(k.$slots,"default")],2)):h("",!0)}},ye=["a","b","c","d","e","f","g","h"],be=["1","2","3","4","5","6","7","8"],O=()=>`${ye[Math.floor(Math.random()*8)]}${be[Math.floor(Math.random()*8)]}`,W=["a","b","c","d","e","f","g","h"],J=["1","2","3","4","5","6","7","8"],Me=(c,s)=>{if(!c)return[];if(!s)return[];if(c!==U.bn&&c!==U.wn)return[];const t=W.indexOf(s[0]),o=J.indexOf(s[1]);return[[t-2,o-1],[t-2,o+1],[t-1,o-2],[t-1,o+2],[t+1,o-2],[t+1,o+2],[t+2,o-1],[t+2,o+1]].filter(([e,l])=>{const u=e>=0&&e<=7,d=l>=0&&l<=7;return u&&d}).map(([e,l])=>`${W[e]}${J[l]}`)};const xe={class:"relative"},ke=g("span",null,"Click to play",-1),we={__name:"ChessBoard",props:{start:{type:String,default:null},goalSquares:{type:Array,default:()=>[]},disableLegalMoves:{type:Number,default:0},showLegalMoves:{type:Boolean,default:!1}},emits:["start","move","invalidMove"],setup(c,{expose:s,emit:t}){const o=c;let e=null;const l=E(null),u=E(null),d=E(null),p=n(()=>Me(u.value,d.value)),k=n(()=>{const f=p.value.filter(ae=>!o.goalSquares.includes(ae)),b=Math.min(p.value.length-1,f.length),G=f.sort(()=>.5-Math.random()),se=Math.min(o.disableLegalMoves,b);return G.slice(0,se)}),i=n(()=>p.value.filter(f=>!k.value.includes(f))),r=E(!1),x=f=>{if(!e)return;const b=f.target.getAttribute("data-square");if(!b)return;const G=e.getMarkers(L,b);(G==null?void 0:G.length)===0&&(e.removeMarkers(L),e.addMarker(L,b))},_=()=>{e&&e.removeMarkers(L)},w=f=>{if(!e)return;const b=f.target.getAttribute("data-square");i.value.includes(b)?(e.movePiece(d.value,b),t("move",{from:d.value,to:b}),d.value=b):t("invalidMove",{from:d.value,to:b})},y=()=>{e&&(e.destroy(),l.value.replaceChildren())},A=()=>{e=new ne(l.value,{assetsUrl:"/chess/",extensions:[{class:re}]}),e.context.addEventListener("mousedown",w),e.context.addEventListener("mouseover",x),e.context.addEventListener("mouseleave",_)},Z=()=>{if(!e)return;u.value=["bn","wn"][Math.floor(Math.random()*2)];let f=o.start||O();for(;o.goalSquares.includes(f);)f=O();d.value=f,e.setPiece(d.value,u.value,!0)},ee=()=>{e&&(e.removeMarkers(z),o.goalSquares.forEach(f=>{e.addMarker(z,f)}))},K=()=>{e&&(e.removeMarkers(j),o.showLegalMoves&&i.value.forEach(f=>{e.addMarker(j,f)}))},H=()=>{e&&(e.removeMarkers(Y),k.value.forEach(f=>{e.addMarker(Y,f)}))};oe(d,()=>{K(),H()}),le(()=>{A()});const te=()=>{r.value=!0,t("start")};return s({ready:()=>{y(),A(),Z(),ee(),K(),H()},stop:()=>{e==null||e.removeMarkers(),y(),A(),r.value=!1}}),(f,b)=>(v(),m("div",xe,[g("div",{ref_key:"boardEl",ref:l},null,512),a(r)?h("",!0):(v(),m("div",{key:0,class:"cursor-pointer bg-gray-300/80 absolute inset-0 flex flex-col items-center justify-center select-none gap-2",onClick:te},[ke,X(f.$slots,"default")]))]))}},Se=N(he),De=N(_e),Be={__name:"BaseHorsey",setup(c){const s=E(null),t=E([]),o=q();let e;const l=n(()=>o.selectedDifficulty<=P),u=n(()=>o.selectedDifficulty===R?1:o.selectedDifficulty===I?2:o.selectedDifficulty===F?3:0),d=()=>{e={start:null,end:null,moves:0,invalidMoves:0,startPerformance:0,endPerformance:0,ms:0}},p=()=>{o.saveFile.addBaseStat(new ce({...e,difficulty:o.selectedDifficulty,date:Date.now()})),d(),s.value.stop()},k=async()=>{d(),t.value=[O()],e.end=t.value[0],e.startPerformance=performance.now(),await ie(),s.value.ready()},i=({from:x,to:_})=>{e.moves===0&&(e.start=x),e.moves+=1,t.value[0]===_&&(e.endPerformance=performance.now(),e.ms=e.endPerformance-e.startPerformance,p())},r=()=>{e.invalidMoves+=1};return(x,_)=>{const w=Se,y=De,A=we;return v(),m(Q,null,[g("div",null,[M(w,{easy:"",dang:"",damn:"",fuck:"",evil:""}),M(y,{easy:""},{default:T(()=>[$(" Show legal moves ")]),_:1}),M(y,{dang:"",damn:"",fuck:"",evil:""},{default:T(()=>[$(" Hide legal moves ")]),_:1}),M(y,{damn:"",fuck:"",evil:""},{default:T(()=>[$(" Disable one legal move ")]),_:1}),M(y,{fuck:"",evil:""},{default:T(()=>[$(" Disable one more legal move ")]),_:1}),M(y,{evil:""},{default:T(()=>[$(" Disable one more legal move ")]),_:1})]),M(A,{ref_key:"board",ref:s,"show-legal-moves":a(l),"disable-legal-moves":a(u),"goal-squares":a(t),class:"mt-2",onStart:k,onMove:i,onInvalidMove:r},null,8,["show-legal-moves","disable-legal-moves","goal-squares"])],64)}}},$e={class:"rounded-b-lg overflow-hidden w-full origin-bottom-left not-prose"},Ee={class:"relative px-4 bg-white"},Ae=g("div",{class:"absolute top-1/2 left-0 right-0 bottom-0 bg-black"},null,-1),Ge={class:"stat text-3xl text-white mix-blend-difference translate-y-[10%] z-10"},Te={class:"bg-green-900 h-4 w-full relative"},Ce={class:"text-white font-bold text-xs whitespace-nowrap"},Pe={__name:"StatItem.client",props:{label:{type:String,required:!0},value:{type:Array,required:!0},ratio:{type:Boolean,default:!1},speed:{type:Boolean,default:!1},count:{type:Boolean,default:!1},higherIsBetter:{type:Boolean,default:!1},lowerIsBetter:{type:Boolean,default:!1}},setup(c){const s=c,t=n(()=>{if(s.ratio)return(1-s.value)*100;if(s.speed){const[e,l,u]=s.value;return(l-e)/(u-e)*100}return s.count?0:50}),o=n(()=>{if(s.ratio)return`${(100*s.value[0]).toPrecision(4)}% optimal moves`;if(s.speed){const[e,l,u]=s.value;return`${l.toFixed(2)} ms / game (${u.toFixed(2)} avg slowest, ${e.toFixed(2)} avg fastest)`}return s.count?s.value.join(" "):s.value});return(e,l)=>(v(),m("div",$e,[g("div",Ee,[Ae,g("div",Ge,D(c.label),1)]),g("div",Te,[g("div",{class:S(["absolute top-0 bottom-0 left-0 bg-green-700 flex items-center px-4 transition-all",{"rounded-r-full":a(t)>0}]),style:ue({right:`${a(t)}%`})},[g("p",Ce,D(a(o)),1)],6)])]))}},qe=de("baseStatsStore",()=>{const c=q(),s=n(()=>{var i;return((i=c.saveFile)==null?void 0:i.selectedDifficulty)??P}),t=n(()=>{var r;return Object.values(((r=c.saveFile)==null?void 0:r.baseStats)??{}).filter(({difficulty:x})=>x===s.value)}),o=n(()=>t.value.length),e=n(()=>t.value.sort(({ms:i},{ms:r})=>i-r)),l=n(()=>t.value.reduce((i,{moves:r})=>i+r,0)),u=n(()=>t.value.reduce((i,{invalidMoves:r})=>i+r,0)),d=n(()=>t.value.reduce((i,{optimalMoves:r})=>i+r,0)),p=n(()=>t.value.reduce((i,{ms:r})=>i+r,0));return{baseStats:n(()=>{const i=Math.floor(e.value.length*.1),r=e.value.slice(-1*i).reduce((_,{ms:w,moves:y})=>(_.time+=w,_.moves+=y,_),{time:0,moves:0}),x=e.value.slice(0,i).reduce((_,{ms:w,moves:y})=>(_.time+=w,_.moves+=y,_),{time:0,moves:0});return{allGames:o.value,allMoves:l.value,allInvalidMoves:u.value,allOptimalMoves:d.value,allTime:p.value,allBestMoveRatio:d.value/l.value,allAverageTimePerMove:p.value/l.value,allAverageSlowestTimePerMove:r.time/r.moves,allAverageFastestTimePerMove:x.time/x.moves}}),difficulty:s}}),Le=N(Pe),Re={class:"not-prose"},Ie={key:0,class:"mb-2"},Fe={key:1,class:"mb-4"},Ne={key:2},Ve={key:3,class:"mb-2"},Oe={key:4},Ke={key:5,class:"flex flex-col gap-4"},C=10,B=100,He={__name:"StatsDisplay.client",setup(c){const s=qe(),{baseStats:t}=fe(s),o=n(()=>t.value.allGames>=C+10),e=n(()=>t.value.allGames>=C+10&&t.value.allGames<B),l=n(()=>t.value.allGames>=B),u=n(()=>t.value.allGames>=0),d=n(()=>t.value.allGames>=0&&t.value.allGames<C),p=n(()=>t.value.allGames>=C);return(k,i)=>{const r=Le;return v(),m("div",Re,[a(o)?(v(),m("h3",Ie,"Rolling "+D(B)+" Statistics")):h("",!0),a(e)?(v(),m("div",Fe," Play at least "+D(B-a(t).allGames)+" more games to see your rolling "+D(B)+" statistics! These statistics are based on your "+D(B)+" most recent games only. ",1)):h("",!0),a(l)?(v(),m("div",Ne," rolling stats coming soon ")):h("",!0),a(u)?(v(),m("h3",Ve,"Lifetime Statistics")):h("",!0),a(d)?(v(),m("div",Oe," Play at least "+D(C-a(t).allGames)+" more games to see statistics! ",1)):h("",!0),a(p)?(v(),m("div",Ke,[M(r,{label:"GAMES",value:["You have played",a(t).allGames,"games. Wow."],count:"","lower-is-better":""},null,8,["value"]),M(r,{label:"SPEED",value:[a(t).allAverageFastestTimePerMove,a(t).allAverageTimePerMove,a(t).allAverageSlowestTimePerMove],speed:"","lower-is-better":""},null,8,["value"]),M(r,{label:"ACCURACY",value:[a(t).allBestMoveRatio],ratio:"","higher-is-better":""},null,8,["value"])])):h("",!0)])}}},Ue=N(He),ze=g("h1",null,"Base Horsey",-1),je={class:"xl:fixed xl:right-0 xl:top-0 xl:bottom-0 xl:w-full xl:max-w-side xl:overflow-auto z-50"},Ye={class:"xl:mx-4 xl:mt-[10.5rem]"},We=ve("<p>The Base Knight game trains you on the basic knight moves.</p><h3>fork knight</h3><p>coming soon - find the square that forks two pieces</p><h3>defense knight</h3><p>coming soon - find a square that defends a piece</p><h3>defended knight</h3><p>coming soon - find a square that defends the knight</p><h3>dodge knight</h3><p>coming soon - get to a square while dodging all no-no squares</p><h3>predict knight</h3><p>coming soon - find a square X moves away from the knight</p>",11),tt={__name:"index",setup(c){me({pageTitle:"horsey.gg"});const s=q(),t=()=>{s.saveFile.resetBaseStats()};return(o,e)=>{const l=Be,u=Ue;return v(),m(Q,null,[ze,M(l),g("div",je,[g("div",Ye,[M(u)])]),g("p",null,[$(" Reset stats, test mode only: "),g("button",{type:"button",onClick:t},"Reset stats")]),We],64)}}};export{tt as default};
