import{M as x,C as N,a as j,P as H}from"./markers.b18db3db.js";import{r as f,b as K,h as I,w as U,e as W,f as n,t as R,u as y,o as z}from"./entry.424341c0.js";const F={class:"prose prose-red container mx-auto my-12 text-justify"},J=n("h1",null,"KnightSight",-1),Q={class:""},X=n("p",null," KnightSight is a chess knight move trainer. Your goal is to get the knight from a randomly generated position to another as quickly as possible. Your score is accuracy vs time spent. ",-1),Z=n("p",null,"Mode ideas:",-1),ee=n("p",null,"attack the pawn (get into a position that attacks the pawn)",-1),te=n("p",null,"threaten the attack (get into a position that's one move away from attacking the pawn",-1),oe=n("p",null,"defend the knight (get into a position defended by the other piece on the board)",-1),L=-1,re={__name:"tmp",setup(ae){const d=["a","b","c","d","e","f","g","h"],h=["1","2","3","4","5","6","7","8"],M=()=>`${d[Math.floor(Math.random()*8)]}${h[Math.floor(Math.random()*8)]}`,P=t=>{if(!t)return[];const e=d.indexOf(t[0]),a=h.indexOf(t[1]);return[[e-2,a-1],[e-2,a+1],[e-1,a-2],[e-1,a+2],[e+1,a-2],[e+1,a+2],[e+2,a-1],[e+2,a+1]].filter(([u,s])=>{const r=u>=0&&u<=7,c=s>=0&&s<=7;return r&&c}).map(([u,s])=>`${d[u]}${h[s]}`)},m=x.frame,g=x.dot,O=x.circlePrimary;let o=null,v=null;const p=f(0),i=f(0),l=f(null),A=f(null),C=K(()=>P(l.value)),_=K(()=>l.value===v);let k=!0;const w=f(null),S=()=>{o&&(o.destroy(),w.value.replaceChildren()),o=new N(w.value,{assetsUrl:"/chess/",extensions:[{class:j}]})},T=()=>{l.value=M(),o.setPiece(l.value,H.bn,!0)},q=()=>{let t=M();for(;t===l.value;)t=M();v=t,o.removeMarkers(O),o.addMarker(O,v)},b=()=>{o.removeMarkers(g),k&&C.value.forEach(t=>{o.addMarker(g,t)})},B=()=>{const t=d.indexOf(l.value[0]),e=h.indexOf(l.value[1]),a=d.indexOf(v[0]),u=h.indexOf(v[1]);let s=Math.abs(t-a),r=Math.abs(e-u);if(s<r){const G=s;s=r,r=G}if(s===1&&r===0)return 3;if(s===2&&r===2)return 4;const c=s-r;return r>c?c-2*Math.floor((c-r)/3):c-2*Math.floor((c-r)/4)},V=()=>{k=!k,b()},E=()=>{p.value=0,i.value=L,S(),T(),q(),A.value=B(),b()},$=t=>{if(_.value)return;const e=t.target.getAttribute("data-square");if(!e)return;const a=o.getMarkers(m,e);(a==null?void 0:a.length)===0&&(o.removeMarkers(m),o.addMarker(m,e))},Y=t=>{if(_.value){E();return}i.value===L&&(i.value=performance.now());const e=t.target.getAttribute("data-square");C.value.includes(e)&&(p.value+=1,o.movePiece(l.value,e),l.value=e,b())},D=()=>{o.removeMarkers(m),o.removeMarkers(g),i.value=performance.now()-i.value};return I(()=>{E(),o.context.addEventListener("mouseover",$),o.context.addEventListener("mousedown",Y)}),U(_,t=>{t&&D()}),(t,e)=>(z(),W("div",F,[J,n("div",Q,[n("p",null,"Minimum: "+R(y(A)),1),n("p",null,"Moves: "+R(y(p)),1),n("p",null,"Time: "+R(y(i)),1)]),n("div",{ref_key:"boardEl",ref:w},null,512),X,Z,ee,te,oe,n("button",{onClick:E},"reset"),n("button",{onClick:V},"Toggle legal moves")]))}};export{re as default};
