import{e as T,j as g,f as t,G}from"./entry.f826144a.js";const p=T("baseStatsStore",()=>{const v=g(),m=t(()=>{var e;return((e=v.saveFile)==null?void 0:e.selectedDifficulty)??G}),d=t(()=>{var e;return Object.values(((e=v.saveFile)==null?void 0:e.baseStats)??{})}),l=t(()=>{var s;return Object.values(((s=v.saveFile)==null?void 0:s.baseStats)??{}).filter(({difficulty:o})=>o===m.value)}),f=t(()=>l.value.length),r=t(()=>l.value.sort(({ms:e},{ms:s})=>e-s)),u=t(()=>l.value.reduce((e,{moves:s})=>e+s,0)),M=t(()=>l.value.reduce((e,{invalidMoves:s})=>e+s,0)),c=t(()=>l.value.reduce((e,{optimalMoves:s})=>e+s,0)),S=t(()=>l.value.reduce((e,{ms:s})=>e+s,0)),b=t(()=>{const e=Math.floor(r.value.length*.1),s=r.value.slice(-1*e).reduce((a,{ms:n,moves:i})=>(a.time+=n,a.moves+=i,a),{time:0,moves:0}),o=r.value.slice(0,e).reduce((a,{ms:n,moves:i})=>(a.time+=n,a.moves+=i,a),{time:0,moves:0});return{allGames:f.value,allMoves:u.value,allInvalidMoves:M.value,allOptimalMoves:c.value,allTime:S.value,allBestMoveRatio:c.value/u.value,allAverageTimePerMove:S.value/u.value,allAverageSlowestTimePerMove:s.time/s.moves,allAverageFastestTimePerMove:o.time/o.moves}});return{rawGames:d,baseStats:b,difficulty:m}});export{p as u};
